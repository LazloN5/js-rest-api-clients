/* eslint-disable camelcase */

/* tslint:disable */
/**
 * This file was automatically generated by hyperschema-to-ts: DO NOT MODIFY IT BY HAND.
 */

/**
 * JSON API type field
 *
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `definition` "type".
 */
export type SessionType = 'session';
/**
 * JSON web token for the session
 *
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `definition` "id".
 */
export type SessionIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "type".
 */
export type AccountType = 'account';
/**
 * ID of account
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "id".
 */
export type AccountIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "type".
 */
export type AccountSubscriptionType = 'account_subscription';
/**
 * ID of subscription
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "id".
 */
export type AccountSubscriptionIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `definition` "type".
 */
export type PerAccountPricingBillingProfileType =
  'per_account_pricing_billing_profile';
/**
 * ID of billing_profile
 *
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `definition` "id".
 */
export type PerAccountPricingBillingProfileIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `Job`'s JSON-Schema
 * via the `definition` "type".
 */
export type JobType = 'job';
/**
 * ID of job
 *
 * This interface was referenced by `Job`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `Job`'s JSON-Schema
 * via the `definition` "id".
 */
export type JobIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `definition` "type".
 */
export type AccountPlanType = 'account_plan';
/**
 * ID of plan
 *
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `definition` "id".
 */
export type AccountPlanIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "type".
 */
export type SiteType = 'site';
/**
 * ID of site
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "id".
 */
export type SiteIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "type".
 */
export type SiteSubscriptionType = 'site_subscription';
/**
 * ID of subscription
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "id".
 */
export type SiteSubscriptionIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `definition` "type".
 */
export type SitePlanType = 'site_plan';
/**
 * ID of plan
 *
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `definition` "id".
 */
export type SitePlanIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "type".
 */
export type SiteTransferType = 'site_transfer';
/**
 * ID of site_transfer
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "id".
 */
export type SiteTransferIdentity = string;
/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `instances.hrefSchema` link.
 */
export type SiteInstancesHrefSchema = {
  /**
   * Sorts projects (default sorting is by ascending name)
   */
  sort?:
    | 'name'
    | '-name'
    | 'last_data_change_at'
    | '-last_data_change_at'
    | 'plan'
    | '-plan';
  filters?: {
    /**
     * Filter by project name
     */
    match?: string;
    [k: string]: unknown;
  };
  /**
   * Attributes to manage results pagination
   */
  page?: {
    /**
     * Index of first element to fetch. Default: 0
     */
    offset?: number;
    /**
     * Number of elements to fetch. Maximum is 50 per page, default is 15.
     */
    limit?: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
};
/**
 * JSON API type field
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "type".
 */
export type PerSitePricingBillingProfileType =
  'per_site_pricing_billing_profile';
/**
 * ID of billing_profile
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "id".
 */
export type PerSitePricingBillingProfileIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "type".
 */
export type InvoiceType = 'invoice';
/**
 * ID of billing_profile
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "id".
 */
export type InvoiceIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `definition` "type".
 */
export type ResourceUsageType = 'resource_usage';
/**
 * ID of billing_profile
 *
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `definition` "id".
 */
export type ResourceUsageIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `definition` "type".
 */
export type JobResultType = 'job_result';
/**
 * ID of job result
 *
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `definition` "id".
 */
export type JobResultIdentity = string;
/**
 * ID of site invitation
 *
 * This interface was referenced by `SiteInvitation`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SiteInvitation`'s JSON-Schema
 * via the `definition` "id".
 */
export type SiteInvitationIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `SiteInvitation`'s JSON-Schema
 * via the `definition` "type".
 */
export type SiteInvitationType = 'site_invitation';
/**
 * JSON API type field
 *
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `definition` "type".
 */
export type SubscriptionLimitType = 'subscription_limit';
/**
 * ID of limit
 *
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `definition` "id".
 */
export type SubscriptionLimitIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `definition` "type".
 */
export type SubscriptionFeatureType = 'subscription_feature';
/**
 * ID of feature
 *
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `definition` "id".
 */
export type SubscriptionFeatureIdentity = string;
/**
 * JSON API type field
 *
 * This interface was referenced by `OauthApplication`'s JSON-Schema
 * via the `definition` "type".
 */
export type OauthApplicationType = 'oauth_application';
/**
 * ID of access_token
 *
 * This interface was referenced by `OauthApplication`'s JSON-Schema
 * via the `definition` "identity".
 *
 * This interface was referenced by `OauthApplication`'s JSON-Schema
 * via the `definition` "id".
 */
export type OauthApplicationIdentity = string;

export interface DatoApi {
  session?: Session;
  account?: Account;
  site?: Site;
  site_subscription?: SiteSubscription;
  account_subscription?: AccountSubscription;
  site_plan?: SitePlan;
  account_plan?: AccountPlan;
  per_site_pricing_billing_profile?: PerSitePricingBillingProfile;
  per_account_pricing_billing_profile?: PerAccountPricingBillingProfile;
  invoice?: Invoice;
  resource_usage?: ResourceUsage;
  job_result?: JobResult;
  site_transfer?: SiteTransfer;
  site_invitation?: SiteInvitation;
  subscription_limit?: SubscriptionLimit;
  subscription_feature?: SubscriptionFeature;
  job?: Job;
  oauth_application?: OauthApplication;
  [k: string]: unknown;
}

/**
 * A session is required to access to read-and-write API endpoints
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "session".
 */
export interface Session {
  type: SessionType;
  id: SessionIdentity;
  relationships: SessionRelationships;
}

/**
 * JSON API links
 *
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface SessionRelationships {
  /**
   * The account associated with the session
   */
  account: {
    data: AccountData;
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "data".
 */
export interface AccountData {
  type: AccountType;
  id: AccountIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SessionData {
  type: SessionType;
  id: SessionIdentity;
}

/**
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface SessionCreateSchema {
  data:
    | {
        /**
         * JSON API type field
         */
        type: 'email_credentials';
        /**
         * JSON API attributes
         */
        attributes: {
          /**
           * Email
           */
          email: string;
          /**
           * Password
           */
          password: string;
          /**
           * Two-factor authentication one-time password
           */
          otp_code?: string;
        };
      }
    | {
        /**
         * JSON API type field
         */
        type: 'password_reset';
        /**
         * JSON API attributes
         */
        attributes: {
          /**
           * Reset token
           */
          token: string;
          /**
           * Account ID
           */
          account_id: string;
          /**
           * Password
           */
          password: string;
          /**
           * Two-factor authentication one-time password
           */
          otp_code?: string;
        };
      };
}

/**
 * This interface was referenced by `Session`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface SessionCreateTargetSchema {
  data: Session;
  included: Account[];
}

/**
 * DatoCMS account
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "account".
 */
export interface Account {
  type: AccountType;
  id: AccountIdentity;
  attributes: AccountAttributes;
  relationships?: AccountRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface AccountAttributes {
  /**
   * Email
   */
  email: string;
  /**
   * First name
   */
  first_name: string | null;
  /**
   * Last name
   */
  last_name: string | null;
  /**
   * Company name
   */
  company: string | null;
  /**
   * API token
   */
  api_token?: string;
  /**
   * Whether 2-factor authentication is active for this account or not
   */
  is_2fa_active: boolean;
}

/**
 * JSON API links
 *
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface AccountRelationships {
  active_subscription: {
    data: null | AccountSubscriptionData;
  };
  billing_profile: {
    data: null | PerAccountPricingBillingProfileData;
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "data".
 */
export interface AccountSubscriptionData {
  type: AccountSubscriptionType;
  id: AccountSubscriptionIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `definition` "data".
 */
export interface PerAccountPricingBillingProfileData {
  type: PerAccountPricingBillingProfileType;
  id: PerAccountPricingBillingProfileIdentity;
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface AccountCreateSchema {
  data: {
    type: AccountType;
    attributes: {
      /**
       * Email
       */
      email: string;
      /**
       * First name
       */
      first_name?: string | null;
      /**
       * Last name
       */
      last_name?: string | null;
      /**
       * Company name
       */
      company?: string | null;
      /**
       * Password
       */
      password: string;
      acquisition_method?: {
        source: string;
        medium: string;
        campaign?: string;
      };
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface AccountCreateTargetSchema {
  data: Session;
  included?: Account[];
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `update.schema` link.
 */
export interface AccountUpdateSchema {
  data: {
    type: AccountType;
    id: AccountIdentity;
    attributes: {
      /**
       * Email
       */
      email?: string;
      /**
       * First name
       */
      first_name?: string | null;
      /**
       * Last name
       */
      last_name?: string | null;
      /**
       * Company name
       */
      company?: string | null;
      /**
       * New password
       */
      password?: string;
      /**
       * Current password (required if new_password or email is set)
       */
      current_password?: string;
      /**
       * Two-factor authentication one-time password (required if new_password or email is set)
       */
      otp_code?: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `update.targetSchema` link.
 */
export interface AccountUpdateTargetSchema {
  data: Session;
  included: Account[];
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `destroy.schema` link.
 */
export interface AccountDestroySchema {
  data: {
    /**
     * JSON API type field
     */
    type: 'account_destroy_request';
    attributes: {
      /**
       * OTP code
       */
      otp_code: string;
      /**
       * Current password
       */
      password: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `destroy.targetSchema` link.
 */
export interface AccountDestroyTargetSchema {
  data: Job;
}

/**
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "job".
 */
export interface Job {
  type: JobType;
  id: JobIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `Job`'s JSON-Schema
 * via the `definition` "data".
 */
export interface JobData {
  type: JobType;
  id: JobIdentity;
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `destroy.jobSchema` link.
 */
export interface AccountDestroyJobSchema {
  data: Account;
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface AccountSelfTargetSchema {
  data: Account;
  included?: (AccountPlan | AccountSubscription)[];
}

/**
 * Stores the information regarding the current plan for the account.
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "account_plan".
 */
export interface AccountPlan {
  type: AccountPlanType;
  id: AccountPlanIdentity;
  attributes: AccountPlanAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface AccountPlanAttributes {
  /**
   * The name of the plan
   */
  name: string;
  /**
   * Additional notes
   */
  notes: null | string;
  /**
   * Additional enterprise features enabled
   */
  enterprise_features: string[];
  /**
   * Representative color of the plan
   */
  color_hex: null | string;
  /**
   * Description of the plan
   */
  description: null | string;
  /**
   * Whether this plan is active or legacy
   */
  active: boolean;
  /**
   * Monthly price for plan (EUR)
   */
  monthly_price: number;
  /**
   * Yearly price for plan (EUR)
   */
  yearly_price: number;
  limits: (
    | {
        id: string;
        type: 'activable_feature';
        available: boolean;
      }
    | {
        id: string;
        type: 'boolean_system_limit';
        available: boolean;
      }
    | {
        id: string;
        type: 'countable_system_limit';
        limit: number;
      }
    | {
        id: string;
        type: 'possibly_incompatible_countable_system_limit';
        limit: number;
      }
    | {
        id: string;
        type: 'account_managed_resource';
        free_of_charge_usage: number;
        extra_packets_available_in_some_plan: boolean;
        max_extra_packets: null | number;
        extra_packet_amount: null | number;
        extra_packet_price: null | number;
      }
    | {
        id: string;
        type: 'per_site_quota_managed_site_resource';
        free_of_charge_per_site_usage: number;
        max_extra_packets: null | number;
        extra_packet_amount: null | number;
        extra_packet_price: null | number;
        extra_packets_available_in_some_plan: boolean;
      }
    | {
        id: string;
        type: 'per_environment_quota_managed_site_resource';
        free_of_charge_per_environment_usage: number;
        max_extra_packets: null | number;
        extra_packet_amount: null | number;
        extra_packet_price: null | number;
        extra_packets_available_in_some_plan: boolean;
      }
    | {
        id: string;
        type: 'shared_quota_managed_site_resource';
        free_of_charge_usage: number;
        max_extra_packets: null | number;
        extra_packet_amount: null | number;
        extra_packet_price: null | number;
        extra_packets_available_in_some_plan: boolean;
      }
    | {
        id: string;
        type: 'shared_quota_metered_site_resource';
        free_of_charge_usage: number;
        extra_packets_available_in_some_plan?: boolean;
        extra_packet_amount: null | number;
        extra_packet_price: null | number;
      }
  )[];
}

/**
 * JSON API data
 *
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `definition` "data".
 */
export interface AccountPlanData {
  type: AccountPlanType;
  id: AccountPlanIdentity;
}

/**
 * This interface was referenced by `AccountPlan`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface AccountPlanInstancesTargetSchema {
  data: AccountPlan[];
}

/**
 * A subscription record
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "account_subscription".
 */
export interface AccountSubscription {
  type: AccountSubscriptionType;
  id: AccountSubscriptionIdentity;
  attributes: AccountSubscriptionAttributes;
  meta: AccountSubscriptionMeta;
  relationships: AccountSubscriptionRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface AccountSubscriptionAttributes {
  /**
   * Date of creation of subscription
   */
  created_at: string;
  /**
   * Type of recurrence (yearly/monthly)
   */
  recurrence: 'yearly' | 'monthly';
  /**
   * Purchased extra-usage packets
   */
  extra_packets: {
    /**
     * Type of packet
     */
    id: string;
    /**
     * Number of purchased packets
     */
    quantity: number;
  }[];
  price: number;
}

/**
 * JSON API meta
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "meta".
 */
export interface AccountSubscriptionMeta {
  /**
   * Whether account can be billed if it has no credit-card information or not
   */
  billable_without_payment_method: boolean;
}

/**
 * JSON API links
 *
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface AccountSubscriptionRelationships {
  /**
   * Subscription plan
   */
  plan: {
    data: AccountPlanData;
  };
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface AccountSubscriptionCreateSchema {
  data: {
    type: AccountSubscriptionType;
    attributes: {
      payment_intent_id?: string;
      /**
       * Type of recurrence (yearly/monthly)
       */
      recurrence: 'yearly' | 'monthly';
      billing_profile?: null | {
        address_line: string;
        city: string;
        company?: null | string;
        country: string;
        email: string;
        first_name: string;
        last_name: string;
        state: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        po_number?: null | string;
        zip: string;
      };
    };
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: AccountPlanData;
      };
    };
  };
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface AccountSubscriptionCreateTargetSchema {
  data: AccountSubscription;
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `simulate.schema` link.
 */
export interface AccountSubscriptionSimulateSchema {
  data: {
    type: AccountSubscriptionType;
    attributes: {
      /**
       * Type of recurrence (yearly/monthly)
       */
      recurrence: 'yearly' | 'monthly';
      billing_profile?: null | {
        address_line: string;
        city: string;
        country: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        po_number?: null | string;
        zip: string;
        [k: string]: unknown;
      };
    };
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: AccountPlanData;
      };
    };
  };
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `simulate.targetSchema` link.
 */
export interface AccountSubscriptionSimulateTargetSchema {
  data: {
    attributes: {
      amount_due: number;
    };
  };
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `validate.schema` link.
 */
export interface AccountSubscriptionValidateSchema {
  data: {
    type: AccountSubscriptionType;
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: AccountPlanData;
      };
    };
  };
}

/**
 * This interface was referenced by `AccountSubscription`'s JSON-Schema
 * via the `validate.targetSchema` link.
 */
export interface AccountSubscriptionValidateTargetSchema {
  data: AccountSubscription;
  included: Site[];
}

/**
 * A project represents a specific DatoCMS administrative area
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "site".
 */
export interface Site {
  type: SiteType;
  id: SiteIdentity;
  attributes: SiteAttributes;
  relationships: SiteRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SiteAttributes {
  /**
   * Site name
   */
  name: string;
  /**
   * Site domain
   */
  domain: string | null;
  /**
   * Internal project domain
   */
  internal_domain: string;
  /**
   * Internal project subdomain
   */
  internal_subdomain?: string;
  /**
   * Specifies the last time when a change of data occurred
   */
  last_data_change_at: null | string;
  /**
   * Date of project creation
   */
  created_at: null | string;
  /**
   * Access token
   */
  access_token: string;
  /**
   * Read-write API token
   */
  readwrite_token?: null | string;
  /**
   * Read-only API token
   */
  readonly_token?: null | string;
  /**
   * Project owner email
   */
  owner_email?: string;
  /**
   * Status of project according to billing situation
   */
  deactivated: boolean;
  /**
   * Whether the project can be used as a public template
   */
  is_public_template?: boolean;
  /**
   * Status of the project
   */
  status?: 'creating' | 'ready' | 'destroying';
}

/**
 * JSON API links
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface SiteRelationships {
  active_subscription: {
    data: null | SiteSubscriptionData;
  };
  active_plan: {
    data: null | SitePlanData;
  };
  transfer: {
    data: SiteTransferData | null;
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SiteSubscriptionData {
  type: SiteSubscriptionType;
  id: SiteSubscriptionIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SitePlanData {
  type: SitePlanType;
  id: SitePlanIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SiteTransferData {
  type: SiteTransferType;
  id: SiteTransferIdentity;
}

/**
 * JSON API data
 *
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SiteData {
  type: SiteType;
  id: SiteIdentity;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface SiteSelfTargetSchema {
  data: Site;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface SiteInstancesTargetSchema {
  data: Site[];
  meta: {
    total_count: number;
  };
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface SiteCreateSchema {
  data: {
    type: SiteType;
    attributes: {
      /**
       * Site name
       */
      name: string;
      /**
       * Internal project subdomain
       */
      internal_subdomain?: string;
      /**
       * Site template
       */
      template?: string | null;
    };
  };
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface SiteCreateTargetSchema {
  data: Site | Job;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `create.jobSchema` link.
 */
export interface SiteCreateJobSchema {
  data: Site;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `update.schema` link.
 */
export interface SiteUpdateSchema {
  data: {
    id: SiteIdentity;
    type: SiteType;
    attributes: {
      /**
       * Site name
       */
      name?: string;
      /**
       * Site domain
       */
      domain?: string | null;
      /**
       * Internal project subdomain
       */
      internal_subdomain?: string;
      /**
       * Whether the project can be used as a public template
       */
      is_public_template?: boolean;
    };
  };
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `update.targetSchema` link.
 */
export interface SiteUpdateTargetSchema {
  data: Site;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `destroy.targetSchema` link.
 */
export interface SiteDestroyTargetSchema {
  data: Site | Job;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `destroy.jobSchema` link.
 */
export interface SiteDestroyJobSchema {
  data: Site;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `duplicate.schema` link.
 */
export interface SiteDuplicateSchema {
  data: {
    type: SiteType;
    attributes: {
      /**
       * Site name
       */
      name: string;
      /**
       * When duplicating a site it allows to duplicate only the schema
       */
      ignore_content?: boolean;
      payment_intent_id?: string;
      /**
       * Type of recurrence (yearly/monthly)
       */
      recurrence?: 'yearly' | 'monthly';
      /**
       * Extra packets
       */
      extra_packets?: {
        users?: number;
        locales?: number;
        item_types?: number;
        roles?: number;
        build_triggers?: number;
        access_tokens?: number;
        mux_encoding_seconds?: number;
        sandbox_environments?: number;
        items?: number;
        uploadable_bytes?: number;
      };
      billing_profile?: null | {
        address_line: string;
        city: string;
        company?: null | string;
        country: string;
        email: string;
        first_name: string;
        last_name: string;
        state: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        zip: string;
      };
    };
    relationships?: {
      /**
       * Subscription plan
       */
      plan: {
        data: SitePlanData;
      };
      /**
       * Billing profile
       */
      billing_profile?: {
        data: PerSitePricingBillingProfileData | null;
      };
    };
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "data".
 */
export interface PerSitePricingBillingProfileData {
  type: PerSitePricingBillingProfileType;
  id: PerSitePricingBillingProfileIdentity;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `duplicate.targetSchema` link.
 */
export interface SiteDuplicateTargetSchema {
  data: Job;
}

/**
 * This interface was referenced by `Site`'s JSON-Schema
 * via the `duplicate.jobSchema` link.
 */
export interface SiteDuplicateJobSchema {
  data: Site;
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `reset_password.schema` link.
 */
export interface AccountResetPasswordSchema {
  data: {
    type: AccountType;
    attributes: {
      /**
       * Email
       */
      email: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `activate_2fa.schema` link.
 */
export interface AccountActivate_2FaSchema {
  data: {
    /**
     * JSON API type field
     */
    type: string;
    attributes: {
      /**
       * OTP code
       */
      otp_code: string;
      /**
       * Current password
       */
      password: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `activate_2fa.targetSchema` link.
 */
export interface AccountActivate_2FaTargetSchema {
  data: Session;
  included?: (
    | Account
    | {
        [k: string]: unknown;
      }
  )[];
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `reset_2fa.targetSchema` link.
 */
export interface AccountReset_2FaTargetSchema {
  data: {
    /**
     * ID of account
     */
    id: string;
    /**
     * JSON API type field
     */
    type: string;
    attributes: {
      /**
       * 2-factor authentication provisioning URI
       */
      provisioning_2fa_uri: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `deactivate_2fa.schema` link.
 */
export interface AccountDeactivate_2FaSchema {
  data: {
    /**
     * JSON API type field
     */
    type: string;
    attributes: {
      /**
       * OTP code
       */
      otp_code: string;
      /**
       * Current password
       */
      password: string;
    };
  };
}

/**
 * This interface was referenced by `Account`'s JSON-Schema
 * via the `deactivate_2fa.targetSchema` link.
 */
export interface AccountDeactivate_2FaTargetSchema {
  data: Account;
}

/**
 * A per-project subscription record
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "site_subscription".
 */
export interface SiteSubscription {
  type: SiteSubscriptionType;
  id: SiteSubscriptionIdentity;
  attributes?: SiteSubscriptionAttributes;
  relationships: SiteSubscriptionRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SiteSubscriptionAttributes {
  /**
   * Date of creation of subscription
   */
  created_at: string;
  /**
   * Type of recurrence (yearly/monthly)
   */
  recurrence: 'yearly' | 'monthly';
  price?: number;
  /**
   * Extra packets
   */
  extra_packets?: {
    users?: number;
    locales?: number;
    item_types?: number;
    roles?: number;
    build_triggers?: number;
    access_tokens?: number;
    mux_encoding_seconds?: number;
    sandbox_environments?: number;
    items?: number;
    uploadable_bytes?: number;
  };
}

/**
 * JSON API links
 *
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface SiteSubscriptionRelationships {
  /**
   * Subscription plan
   */
  plan: {
    data: SitePlanData;
  };
  /**
   * Billing profile
   */
  billing_profile?: {
    data: PerSitePricingBillingProfileData | null;
  };
  /**
   * Subscription site
   */
  site?: {
    data: SiteData;
  };
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface SiteSubscriptionCreateSchema {
  data: {
    type: SiteSubscriptionType;
    attributes: {
      payment_intent_id?: string;
      /**
       * Type of recurrence (yearly/monthly)
       */
      recurrence: 'yearly' | 'monthly';
      /**
       * Extra packets
       */
      extra_packets: {
        users?: number;
        locales?: number;
        item_types?: number;
        roles?: number;
        build_triggers?: number;
        access_tokens?: number;
        mux_encoding_seconds?: number;
        sandbox_environments?: number;
        items?: number;
        uploadable_bytes?: number;
      };
      billing_profile?: null | {
        address_line: string;
        city: string;
        company?: null | string;
        country: string;
        email: string;
        first_name: string;
        last_name: string;
        state: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        zip: string;
      };
    };
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: SitePlanData;
      };
      /**
       * Billing profile
       */
      billing_profile?: {
        data: PerSitePricingBillingProfileData | null;
      };
    };
  };
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface SiteSubscriptionCreateTargetSchema {
  data: SiteSubscription;
  included: Site[];
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `simulate.schema` link.
 */
export interface SiteSubscriptionSimulateSchema {
  data: {
    type: SiteSubscriptionType;
    attributes: {
      /**
       * Type of recurrence (yearly/monthly)
       */
      recurrence: 'yearly' | 'monthly';
      /**
       * Extra packets
       */
      extra_packets: {
        users?: number;
        locales?: number;
        item_types?: number;
        roles?: number;
        build_triggers?: number;
        access_tokens?: number;
        mux_encoding_seconds?: number;
        sandbox_environments?: number;
        items?: number;
        uploadable_bytes?: number;
      };
      is_duplicate?: boolean;
      ignore_content?: boolean;
      billing_profile?: null | {
        address_line: string;
        city: string;
        country: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        zip: string;
        [k: string]: unknown;
      };
    };
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: SitePlanData;
      };
      /**
       * Billing profile
       */
      billing_profile?: {
        data: PerSitePricingBillingProfileData | null;
      };
    };
  };
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `simulate.targetSchema` link.
 */
export interface SiteSubscriptionSimulateTargetSchema {
  data: {
    attributes: {
      amount_due: number;
    };
  };
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `validate.schema` link.
 */
export interface SiteSubscriptionValidateSchema {
  data: {
    type: SiteSubscriptionType;
    attributes: {
      /**
       * Extra packets
       */
      extra_packets: {
        users?: number;
        locales?: number;
        item_types?: number;
        roles?: number;
        build_triggers?: number;
        access_tokens?: number;
        mux_encoding_seconds?: number;
        sandbox_environments?: number;
        items?: number;
        uploadable_bytes?: number;
      };
      /**
       * Skip compatibility checks on content (number of records and uploads)
       */
      ignore_content?: boolean;
      /**
       * Specify is site is a duplicate of another site
       */
      is_duplicate?: boolean;
    };
    relationships: {
      /**
       * Subscription plan
       */
      plan: {
        data: SitePlanData;
      };
    };
  };
}

/**
 * This interface was referenced by `SiteSubscription`'s JSON-Schema
 * via the `validate.targetSchema` link.
 */
export interface SiteSubscriptionValidateTargetSchema {
  data: SiteSubscription;
  included: Site[];
}

/**
 * Stores the information regarding the current plan for the project.
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "site_plan".
 */
export interface SitePlan {
  type: SitePlanType;
  id: SitePlanIdentity;
  attributes: SitePlanAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SitePlanAttributes {
  /**
   * The name of the plan
   */
  name: string;
  /**
   * Whether this plan is active or legacy
   */
  active: boolean;
  /**
   * Whether custom domain can be enabled or not
   */
  custom_domain: boolean;
  /**
   * Number of users that can be invited
   */
  users: null | number;
  /**
   * Number of indexable pages
   */
  indexable_pages: null | number;
  /**
   * Number of build triggers
   */
  build_triggers: null | number;
  /**
   * Number of plugins
   */
  plugins: null | number;
  /**
   * Number of webhooks
   */
  webhooks: null | number;
  /**
   * Number of records allowed
   */
  items: null | number;
  /**
   * Monthly price
   */
  monthly_price: number;
  /**
   * Yearly price
   */
  yearly_price: number;
  /**
   * Uploadable bytes
   */
  uploadable_bytes: null | number;
  /**
   * Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers
   */
  traffic_bytes: null | number;
  /**
   * The number of requests made to both our Content Management and Content Delivery APIs
   */
  api_calls: null | number;
  /**
   * The number of streaming seconds delivered by Mux.com
   */
  mux_streaming_seconds: null | number;
  /**
   * The number of available encoding seconds to Mux.com
   */
  mux_encoding_seconds: null | number;
  /**
   * The number of different API tokens you can generate, each which different permissions
   */
  access_tokens: null | number;
  /**
   * Number of roles allowed
   */
  roles: null | number;
  /**
   * Number of locales allowed
   */
  locales: null | number;
  /**
   * Number of sandbox environments allowed
   */
  sandbox_environments: null | number;
  /**
   * Number of models allowed
   */
  item_types: null | number;
  /**
   * Whether collaboration features are enabled or not
   */
  item_locking: boolean;
  /**
   * Whether project is in white-label mode or not
   */
  white_label: boolean;
  /**
   * Whether Single Sign-On feature is enabled or not
   */
  sso: boolean;
  /**
   * Whether built-in image editor and smart-tagging is enabled or not
   */
  advanced_media_area: boolean;
  /**
   * Maximum number of blocks a record can contain
   */
  blocks_per_item: number;
  /**
   * Maximum level of block nesting for a record
   */
  blocks_depth: number;
  /**
   * Whether video streaming with Mux.com is enabled or not
   */
  video: boolean;
  /**
   * Days of version history retention
   */
  history_retention_days: number | null;
  /**
   * Maximum number of clients connected at the same time to the Realtime Updates API. The limit is per-project
   */
  concurrent_realtime_connections: number;
  /**
   * Period (in minutes) in which bursts of changes made to the same record by the same user (or API token) will be grouped into a single one
   */
  history_resolution_minutes: number;
  /**
   * Whether two-factor authentication can be enabled or not
   */
  otp: boolean;
  /**
   * Whether workflows are enabled or not
   */
  workflows: boolean;
  /**
   * Number of workflows allowed
   */
  workflows_count: number;
  /**
   * Whether audit logs are enabled or not
   */
  audit_log: boolean;
  /**
   * Whether translator roles are enabled or not
   */
  translator_roles: boolean;
  /**
   * Available extra packets
   */
  extra_packets: {
    users?: {
      amount_per_packet: number;
      price: number;
    };
    locales?: {
      amount_per_packet: number;
      price: number;
    };
    item_types?: {
      amount_per_packet: number;
      price: number;
    };
    roles?: {
      amount_per_packet: number;
      price: number;
    };
    build_triggers?: {
      amount_per_packet: number;
      price: number;
    };
    access_tokens?: {
      amount_per_packet: number;
      price: number;
    };
    mux_encoding_seconds?: {
      amount_per_packet: number;
      price: number;
    };
    sandbox_environments?: {
      amount_per_packet: number;
      price: number;
    };
  };
  /**
   * Automatic packets
   */
  auto_packets: {
    traffic_bytes?: {
      amount_per_packet: number;
      price: number;
    };
    api_calls?: {
      amount_per_packet: number;
      price: number;
    };
    mux_streaming_seconds?: {
      amount_per_packet: number;
      price: number;
    };
  };
}

/**
 * This interface was referenced by `SitePlan`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface SitePlanInstancesTargetSchema {
  data: SitePlan[];
}

/**
 * A billing profile
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "per_site_pricing_billing_profile".
 */
export interface PerSitePricingBillingProfile {
  type: PerSitePricingBillingProfileType;
  id: PerSitePricingBillingProfileIdentity;
  attributes: PerSitePricingBillingProfileAttributes;
  relationships: PerSitePricingBillingProfileRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface PerSitePricingBillingProfileAttributes {
  first_name: string;
  last_name: string;
  company: null | string;
  card_last_4: string;
  next_billing_at: string;
  card_type: string;
  card_expiry_month: number;
  card_expiry_year: number;
  address_line: string;
  city: string;
  email: string;
  country: string;
  state: string;
  zip: string;
  vat_number: null | string;
  defaulting: boolean;
  credits: number;
  cf_cod_fiscale: null | string;
  coupons: string[];
  is_active: boolean;
  next_monthly_billing_at: null | string;
  next_yearly_billing_at: null | string;
}

/**
 * JSON API links
 *
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface PerSitePricingBillingProfileRelationships {
  /**
   * Role
   */
  active_subscriptions: {
    data: SiteSubscriptionData[];
  };
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface PerSitePricingBillingProfileInstancesTargetSchema {
  data: PerSitePricingBillingProfile[];
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface PerSitePricingBillingProfileSelfTargetSchema {
  data: PerSitePricingBillingProfile;
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `update_credit_card.schema` link.
 */
export interface PerSitePricingBillingProfileUpdateCreditCardSchema {
  data: {
    /**
     * JSON API type field
     */
    type: 'card';
    attributes: {
      payment_intent_id: string;
    };
  };
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `update_credit_card.targetSchema` link.
 */
export interface PerSitePricingBillingProfileUpdateCreditCardTargetSchema {
  data: PerSitePricingBillingProfile;
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `update_info.schema` link.
 */
export interface PerSitePricingBillingProfileUpdateInfoSchema {
  data: {
    id?: PerSitePricingBillingProfileIdentity;
    type: PerSitePricingBillingProfileType;
    attributes: {
      first_name: string;
      last_name: string;
      company: null | string;
      address_line: string;
      city: string;
      email: string;
      country: string;
      state: string;
      zip: string;
      vat_number?: null | string;
      cf_cod_fiscale?: null | string;
    };
  };
}

/**
 * This interface was referenced by `PerSitePricingBillingProfile`'s JSON-Schema
 * via the `update_info.targetSchema` link.
 */
export interface PerSitePricingBillingProfileUpdateInfoTargetSchema {
  data: PerSitePricingBillingProfile;
}

/**
 * A billing profile
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "per_account_pricing_billing_profile".
 */
export interface PerAccountPricingBillingProfile {
  type: PerAccountPricingBillingProfileType;
  id: PerAccountPricingBillingProfileIdentity;
  attributes: PerAccountPricingBillingProfileAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface PerAccountPricingBillingProfileAttributes {
  first_name: string;
  last_name: string;
  company: null | string;
  card_last_4: string;
  next_billing_at: string;
  card_type: string;
  card_expiry_month: number;
  card_expiry_year: number;
  address_line: string;
  city: string;
  email: string;
  country: string;
  state: string;
  zip: string;
  vat_number: null | string;
  defaulting: boolean;
  credits: number;
  total_dues: number;
  cf_cod_fiscale: null | string;
  po_number: null | string;
  unbilled_charges: number;
  discount_percentage: number;
}

/**
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface PerAccountPricingBillingProfileSelfTargetSchema {
  data: PerAccountPricingBillingProfile;
}

/**
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `update_credit_card.schema` link.
 */
export interface PerAccountPricingBillingProfileUpdateCreditCardSchema {
  data: {
    /**
     * JSON API type field
     */
    type: 'card';
    attributes: {
      payment_intent_id: string;
    };
  };
}

/**
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `update_credit_card.targetSchema` link.
 */
export interface PerAccountPricingBillingProfileUpdateCreditCardTargetSchema {
  data: PerAccountPricingBillingProfile;
}

/**
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `update_info.schema` link.
 */
export interface PerAccountPricingBillingProfileUpdateInfoSchema {
  data: {
    id?: PerAccountPricingBillingProfileIdentity;
    type: PerAccountPricingBillingProfileType;
    attributes: {
      first_name: string;
      last_name: string;
      company: null | string;
      address_line: string;
      city: string;
      email: string;
      country: string;
      state: string;
      zip: string;
      vat_number?: null | string;
      cf_cod_fiscale?: null | string;
      po_number?: null | string;
    };
  };
}

/**
 * This interface was referenced by `PerAccountPricingBillingProfile`'s JSON-Schema
 * via the `update_info.targetSchema` link.
 */
export interface PerAccountPricingBillingProfileUpdateInfoTargetSchema {
  data: PerAccountPricingBillingProfile;
}

/**
 * An invoice
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "invoice".
 */
export interface Invoice {
  type: InvoiceType;
  id: InvoiceIdentity;
  attributes: InvoiceAttributes;
  relationships: InvoiceRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface InvoiceAttributes {
  date: string;
  total: number;
  status: string;
  last_failed_transaction: null | {
    code?: string;
    message?: string;
    [k: string]: unknown;
  };
}

/**
 * JSON API links
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface InvoiceRelationships {
  /**
   * Role
   */
  billing_profile: {
    data:
      | PerSitePricingBillingProfileData
      | PerAccountPricingBillingProfileData;
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `definition` "data".
 */
export interface InvoiceData {
  type: InvoiceType;
  id: InvoiceIdentity;
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_account_pricing_billing_profile_instances.targetSchema` link.
 */
export interface InvoicePerAccountPricingBillingProfileInstancesTargetSchema {
  data: Invoice[];
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_site_pricing_billing_profile_instances.targetSchema` link.
 */
export interface InvoicePerSitePricingBillingProfileInstancesTargetSchema {
  data: Invoice[];
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_account_pricing_billing_profile_collect_unpaid.schema` link.
 */
export interface InvoicePerAccountPricingBillingProfileCollectUnpaidSchema {
  data: {
    /**
     * JSON API type field
     */
    type: 'invoice_collection';
    attributes: {
      payment_intent_id: string;
    };
  };
  [k: string]: unknown;
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_account_pricing_billing_profile_collect_unpaid.targetSchema` link.
 */
export interface InvoicePerAccountPricingBillingProfileCollectUnpaidTargetSchema {
  data: Invoice[];
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_site_pricing_billing_profile_collect_unpaid.schema` link.
 */
export interface InvoicePerSitePricingBillingProfileCollectUnpaidSchema {
  data: {
    /**
     * JSON API type field
     */
    type: 'invoice_collection';
    attributes: {
      payment_intent_id: string;
    };
  };
  [k: string]: unknown;
}

/**
 * This interface was referenced by `Invoice`'s JSON-Schema
 * via the `per_site_pricing_billing_profile_collect_unpaid.targetSchema` link.
 */
export interface InvoicePerSitePricingBillingProfileCollectUnpaidTargetSchema {
  data: Invoice[];
}

/**
 * A resource usage
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "resource_usage".
 */
export interface ResourceUsage {
  type: ResourceUsageType;
  id: ResourceUsageIdentity;
  attributes: ResourceUsageAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface ResourceUsageAttributes {
  quota: string;
  current_usage: null | number;
  free_of_charge_usage: number;
  current_extra_usage: null | number;
  sites_current_usage:
    | null
    | {
        site_id: string;
        site_name: string;
        current_usage: number;
      }[];
}

/**
 * JSON API data
 *
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `definition` "data".
 */
export interface ResourceUsageData {
  type: ResourceUsageType;
  id: ResourceUsageIdentity;
}

/**
 * This interface was referenced by `ResourceUsage`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface ResourceUsageInstancesTargetSchema {
  data: ResourceUsage[];
}

/**
 * Some API endpoint give results asynchronously, returning the ID of a job.
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "job_result".
 */
export interface JobResult {
  type: JobResultType;
  id: JobResultIdentity;
  attributes: JobResultAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface JobResultAttributes {
  /**
   * Status of delayed HTTP response
   */
  status: number;
  /**
   * JSON API response of the HTTP request
   */
  payload: null | {
    [k: string]: unknown;
  };
}

/**
 * JSON API data
 *
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `definition` "data".
 */
export interface JobResultData {
  type: JobResultType;
  id: JobResultIdentity;
}

/**
 * This interface was referenced by `JobResult`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface JobResultSelfTargetSchema {
  data: JobResult;
}

/**
 * A request to transfer a site to another account
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "site_transfer".
 */
export interface SiteTransfer {
  type: SiteTransferType;
  id: SiteTransferIdentity;
  attributes: SiteTransferAttributes;
  relationships: SiteTransferRelationships;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SiteTransferAttributes {
  /**
   * Email of the source account
   */
  source_account_email: string;
  /**
   * Email of the destination account
   */
  account_email: string;
  /**
   * Name of the site to transfer
   */
  site_name: string;
  recurrence?: ('yearly' | 'monthly') | null;
  extra_packets: {
    users?: number;
    locales?: number;
    item_types?: number;
    roles?: number;
    build_triggers?: number;
    access_tokens?: number;
    mux_encoding_seconds?: number;
    sandbox_environments?: number;
    items?: number;
    uploadable_bytes?: number;
  } | null;
}

/**
 * JSON API links
 *
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `definition` "relationships".
 */
export interface SiteTransferRelationships {
  /**
   * Current plan
   */
  plan: {
    data: SitePlanData | null;
  };
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface SiteTransferInstancesTargetSchema {
  data: SiteTransfer[];
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `self.targetSchema` link.
 */
export interface SiteTransferSelfTargetSchema {
  data: SiteTransfer;
  included?: SitePlan[];
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `create.schema` link.
 */
export interface SiteTransferCreateSchema {
  data: {
    type: SiteTransferType;
    attributes: {
      /**
       * Email of the destination account
       */
      account_email?: string;
    };
  };
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `create.targetSchema` link.
 */
export interface SiteTransferCreateTargetSchema {
  data: Site;
  included?: SiteTransfer[];
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `destroy.targetSchema` link.
 */
export interface SiteTransferDestroyTargetSchema {
  data: Site;
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `simulate_accept.schema` link.
 */
export interface SiteTransferSimulateAcceptSchema {
  data: {
    id: SiteTransferIdentity;
    type: SiteTransferType;
    attributes?: {
      billing_profile?: null | {
        address_line: string;
        city: string;
        country: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        zip: string;
        [k: string]: unknown;
      };
    };
    /**
     * JSON API links
     */
    relationships: {
      /**
       * Billing profile
       */
      billing_profile: {
        data: PerSitePricingBillingProfileData | null;
      };
    };
  };
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `simulate_accept.targetSchema` link.
 */
export interface SiteTransferSimulateAcceptTargetSchema {
  data: {
    id: string;
    /**
     * JSON API type field
     */
    type: 'next_invoice_estimate';
    attributes: {
      amount: number;
      next_billing_at: string;
      discount_percentage?: number;
      tax_label: null | string;
    };
  };
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `accept.schema` link.
 */
export interface SiteTransferAcceptSchema {
  data: {
    id: SiteTransferIdentity;
    type: SiteTransferType;
    attributes?: {
      payment_intent_id?: string;
      billing_profile?: null | {
        address_line: string;
        city: string;
        company?: null | string;
        country: string;
        email: string;
        first_name: string;
        last_name: string;
        state: string;
        vat_number?: null | string;
        cf_cod_fiscale?: null | string;
        zip: string;
      };
    };
    /**
     * JSON API links
     */
    relationships?: {
      /**
       * Billing profile
       */
      billing_profile: {
        data: PerSitePricingBillingProfileData | null;
      };
    };
  };
}

/**
 * This interface was referenced by `SiteTransfer`'s JSON-Schema
 * via the `accept.targetSchema` link.
 */
export interface SiteTransferAcceptTargetSchema {
  data: Site;
}

/**
 * Site invitation
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "site_invitation".
 */
export interface SiteInvitation {
  id: SiteInvitationIdentity;
  type?: SiteInvitationType;
}

/**
 * This interface was referenced by `SiteInvitation`'s JSON-Schema
 * via the `redeem.targetSchema` link.
 */
export interface SiteInvitationRedeemTargetSchema {
  data: Site;
}

/**
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "subscription_limit".
 */
export interface SubscriptionLimit {
  type: SubscriptionLimitType;
  id: SubscriptionLimitIdentity;
  attributes: SubscriptionLimitAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SubscriptionLimitAttributes {
  /**
   * The codename for the limit
   */
  code: string;
  /**
   * Current usage
   */
  usage: number;
  /**
   * The actual limit
   */
  limit: number | null;
}

/**
 * JSON API data
 *
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SubscriptionLimitData {
  type: SubscriptionLimitType;
  id: SubscriptionLimitIdentity;
}

/**
 * This interface was referenced by `SubscriptionLimit`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface SubscriptionLimitInstancesTargetSchema {
  data: SubscriptionLimit[];
}

/**
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "subscription_feature".
 */
export interface SubscriptionFeature {
  type: SubscriptionFeatureType;
  id: SubscriptionFeatureIdentity;
  attributes: SubscriptionFeatureAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface SubscriptionFeatureAttributes {
  /**
   * The codename for the feature
   */
  code: string;
  /**
   * Whether the project is currently using the feature
   */
  in_use?: boolean;
  /**
   * Whether the feature is available on the current project
   */
  enabled: boolean;
}

/**
 * JSON API data
 *
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `definition` "data".
 */
export interface SubscriptionFeatureData {
  type: SubscriptionFeatureType;
  id: SubscriptionFeatureIdentity;
}

/**
 * This interface was referenced by `SubscriptionFeature`'s JSON-Schema
 * via the `instances.targetSchema` link.
 */
export interface SubscriptionFeatureInstancesTargetSchema {
  data: SubscriptionFeature[];
}

/**
 * An OAuth application that allows access to our API from third party services.
 *
 * This interface was referenced by `DatoApi`'s JSON-Schema
 * via the `definition` "oauth_application".
 */
export interface OauthApplication {
  type: OauthApplicationType;
  id: OauthApplicationIdentity;
  attributes: OauthApplicationAttributes;
}

/**
 * JSON API attributes
 *
 * This interface was referenced by `OauthApplication`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface OauthApplicationAttributes {
  /**
   * Name of application
   */
  name: string;
  /**
   * Date of token creation
   */
  created_at: string;
}

/**
 * JSON API data
 *
 * This interface was referenced by `OauthApplication`'s JSON-Schema
 * via the `definition` "data".
 */
export interface OauthApplicationData {
  type: OauthApplicationType;
  id: OauthApplicationIdentity;
}
