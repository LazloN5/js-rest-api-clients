export default {
  baseUrl: 'https://site-api.datocms.com',
  resources: [
    {
      jsonApiType: 'role',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/role/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/roles',
          method: 'POST',
          comment: 'Create a new role',
          requestBodyType: 'RoleCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'role',
            attributes: [
              'name',
              'can_edit_favicon',
              'can_edit_site',
              'can_edit_schema',
              'can_manage_menu',
              'can_edit_environment',
              'can_promote_environments',
              'environments_access',
              'can_manage_users',
              'can_manage_shared_filters',
              'can_manage_build_triggers',
              'can_manage_webhooks',
              'can_manage_environments',
              'can_manage_sso',
              'can_access_audit_log',
              'can_manage_workflows',
              'can_manage_access_tokens',
              'can_perform_site_search',
              'can_access_build_events_log',
              'positive_item_type_permissions',
              'negative_item_type_permissions',
              'positive_upload_permissions',
              'negative_upload_permissions',
              'positive_build_trigger_permissions',
              'negative_build_trigger_permissions',
            ],
            relationships: ['inherits_permissions_from'],
          },
          responseType: 'RoleCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/role/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/roles/${roleId}',
          method: 'PUT',
          comment: 'Update a role',
          urlPlaceholder: {
            variableName: 'roleId',
            isEntityId: true,
            relType: 'RoleData',
          },
          requestBodyType: 'RoleUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'role',
            attributes: [
              'name',
              'can_edit_favicon',
              'can_edit_site',
              'can_edit_schema',
              'can_manage_menu',
              'can_edit_environment',
              'can_promote_environments',
              'environments_access',
              'can_manage_users',
              'can_manage_shared_filters',
              'can_manage_build_triggers',
              'can_manage_webhooks',
              'can_manage_environments',
              'can_manage_sso',
              'can_access_audit_log',
              'can_manage_workflows',
              'can_manage_access_tokens',
              'can_perform_site_search',
              'can_access_build_events_log',
              'positive_item_type_permissions',
              'negative_item_type_permissions',
              'positive_upload_permissions',
              'negative_upload_permissions',
              'positive_build_trigger_permissions',
              'negative_build_trigger_permissions',
            ],
            relationships: ['inherits_permissions_from'],
          },
          responseType: 'RoleUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/role/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/roles',
          method: 'GET',
          comment: 'List all roles',
          simpleMethodAvailable: true,
          responseType: 'RoleInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/role/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/roles/${roleId}',
          method: 'GET',
          comment: 'Retrieve a role',
          urlPlaceholder: {
            variableName: 'roleId',
            isEntityId: true,
            relType: 'RoleData',
          },
          simpleMethodAvailable: true,
          responseType: 'RoleSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/role/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/roles/${roleId}',
          method: 'DELETE',
          comment: 'Delete a role',
          urlPlaceholder: {
            variableName: 'roleId',
            isEntityId: true,
            relType: 'RoleData',
          },
          simpleMethodAvailable: true,
          responseType: 'RoleDestroyTargetSchema',
        },
      ],
      namespace: 'roles',
      resourceClassName: 'Role',
    },
    {
      jsonApiType: 'user',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/user/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/users/${userId}',
          method: 'PUT',
          comment: 'Update a collaborator',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: true,
            relType: 'UserData',
          },
          requestBodyType: 'UserUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'user',
            attributes: ['is_active'],
            relationships: ['role'],
          },
          responseType: 'UserUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/user/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/users',
          method: 'GET',
          comment: 'List all collaborators',
          simpleMethodAvailable: true,
          responseType: 'UserInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/user/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/users/${userId}',
          method: 'GET',
          comment: 'Retrieve a collaborator',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: true,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          responseType: 'UserSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/user/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/users/${userId}',
          method: 'DELETE',
          comment: 'Delete a collaborator',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: true,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'UserDestroyHrefSchema',
          responseType: 'UserDestroyTargetSchema',
        },
      ],
      namespace: 'users',
      resourceClassName: 'User',
    },
    {
      jsonApiType: 'sso_user',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-user/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/sso-users',
          method: 'GET',
          comment: 'List all users',
          simpleMethodAvailable: true,
          responseType: 'SsoUserInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-user/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/sso-users/${userId}',
          method: 'GET',
          comment: 'Returns a SSO user',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          responseType: 'SsoUserSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-user/copy_users',
          name: 'copyUsers',
          rawName: 'rawCopyUsers',
          urlTemplate: '/sso-users/copy-users',
          method: 'POST',
          comment: 'Copy editors as SSO users',
          simpleMethodAvailable: true,
          responseType: 'SsoUserCopyUsersTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-user/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/sso-users/${userId}',
          method: 'DELETE',
          comment: 'Delete a SSO user',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'SsoUserDestroyHrefSchema',
          responseType: 'SsoUserDestroyTargetSchema',
        },
      ],
      namespace: 'ssoUsers',
      resourceClassName: 'SsoUser',
    },
    {
      jsonApiType: 'audit_log_event',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/audit-log_event/query',
          name: 'query',
          rawName: 'rawQuery',
          urlTemplate: '/audit-log-events/query',
          method: 'POST',
          comment: 'List Audit Log events',
          requestBodyType: 'AuditLogEventQuerySchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'audit_log_query',
            attributes: ['filter', 'next_token', 'detailed_log'],
            relationships: [],
          },
          responseType: 'AuditLogEventQueryTargetSchema',
        },
      ],
      namespace: 'auditLogEvents',
      resourceClassName: 'AuditLogEvent',
    },
    {
      jsonApiType: 'menu_item',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/menu-item/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/menu-items',
          method: 'POST',
          comment: 'Create a new menu item',
          requestBodyType: 'MenuItemCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'menu_item',
            attributes: [
              'label',
              'external_url',
              'position',
              'open_in_new_tab',
            ],
            relationships: ['item_type', 'parent'],
          },
          responseType: 'MenuItemCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/menu-item/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/menu-items/${menuItemId}',
          method: 'PUT',
          comment: 'Update a menu item',
          urlPlaceholder: {
            variableName: 'menuItemId',
            isEntityId: true,
            relType: 'MenuItemData',
          },
          requestBodyType: 'MenuItemUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'menu_item',
            attributes: [
              'label',
              'external_url',
              'position',
              'open_in_new_tab',
            ],
            relationships: ['item_type', 'parent'],
          },
          responseType: 'MenuItemUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/menu-item/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/menu-items',
          method: 'GET',
          comment: 'List all menu items',
          simpleMethodAvailable: true,
          queryParamsType: 'MenuItemInstancesHrefSchema',
          responseType: 'MenuItemInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/menu-item/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/menu-items/${menuItemId}',
          method: 'GET',
          comment: 'Retrieve a menu item',
          urlPlaceholder: {
            variableName: 'menuItemId',
            isEntityId: true,
            relType: 'MenuItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'MenuItemSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/menu-item/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/menu-items/${menuItemId}',
          method: 'DELETE',
          comment: 'Delete a menu item',
          urlPlaceholder: {
            variableName: 'menuItemId',
            isEntityId: true,
            relType: 'MenuItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'MenuItemDestroyTargetSchema',
        },
      ],
      namespace: 'menuItems',
      resourceClassName: 'MenuItem',
    },
    {
      jsonApiType: 'item_type',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/item-types',
          method: 'POST',
          comment: 'Create a new model',
          requestBodyType: 'ItemTypeCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_type',
            attributes: [
              'name',
              'api_key',
              'singleton',
              'all_locales_required',
              'sortable',
              'modular_block',
              'draft_mode_active',
              'tree',
              'ordering_direction',
              'ordering_meta',
              'collection_appeareance',
              'collection_appearance',
              'hint',
            ],
            relationships: [
              'ordering_field',
              'title_field',
              'image_preview_field',
              'excerpt_field',
              'workflow',
            ],
          },
          responseType: 'ItemTypeCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/item-types/${itemTypeId}',
          method: 'PUT',
          comment: 'Update a model',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: true,
            relType: 'ItemTypeData',
          },
          requestBodyType: 'ItemTypeUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_type',
            attributes: [
              'name',
              'api_key',
              'collection_appeareance',
              'collection_appearance',
              'singleton',
              'all_locales_required',
              'sortable',
              'modular_block',
              'draft_mode_active',
              'tree',
              'ordering_direction',
              'ordering_meta',
              'has_singleton_item',
              'hint',
            ],
            relationships: [
              'ordering_field',
              'title_field',
              'image_preview_field',
              'excerpt_field',
              'workflow',
            ],
          },
          responseType: 'ItemTypeUpdateJobSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/item-types',
          method: 'GET',
          comment: 'List all models',
          simpleMethodAvailable: true,
          responseType: 'ItemTypeInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/item-types/${itemTypeId}',
          method: 'GET',
          comment: 'Retrieve a model',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: true,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemTypeSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/duplicate',
          name: 'duplicate',
          rawName: 'rawDuplicate',
          urlTemplate: '/item-types/${itemTypeId}/duplicate',
          method: 'POST',
          comment: 'Duplicate model',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: true,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemTypeDuplicateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/item-types/${itemTypeId}',
          method: 'DELETE',
          comment: 'Delete a model',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: true,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemTypeDestroyJobSchema',
        },
      ],
      namespace: 'itemTypes',
      resourceClassName: 'ItemType',
    },
    {
      jsonApiType: 'field',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/item-types/${itemTypeId}/fields',
          method: 'POST',
          comment: 'Create a new field',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          requestBodyType: 'FieldCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'field',
            attributes: [
              'label',
              'field_type',
              'api_key',
              'localized',
              'validators',
              'appeareance',
              'appearance',
              'position',
              'hint',
              'default_value',
            ],
            relationships: ['fieldset'],
          },
          responseType: 'FieldCreateJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/fields/${fieldId}',
          method: 'PUT',
          comment: 'Update a field',
          urlPlaceholder: {
            variableName: 'fieldId',
            isEntityId: true,
            relType: 'FieldData',
          },
          requestBodyType: 'FieldUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'field',
            attributes: [
              'default_value',
              'label',
              'api_key',
              'localized',
              'validators',
              'appeareance',
              'appearance',
              'position',
              'field_type',
              'hint',
            ],
            relationships: ['fieldset'],
          },
          responseType: 'FieldUpdateJobSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/item-types/${itemTypeId}/fields',
          method: 'GET',
          comment: 'List all fields',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/referencing',
          name: 'referencing',
          rawName: 'rawReferencing',
          urlTemplate: '/item-types/${itemTypeId}/fields/referencing',
          method: 'GET',
          comment: 'List referenced fields',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldReferencingTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/related',
          name: 'related',
          rawName: 'rawRelated',
          urlTemplate: '/item-types/${itemTypeId}/fields/related',
          method: 'GET',
          comment: 'List related fields',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldRelatedTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/fields/${fieldId}',
          method: 'GET',
          comment: 'Retrieve a field',
          urlPlaceholder: {
            variableName: 'fieldId',
            isEntityId: true,
            relType: 'FieldData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/fields/${fieldId}',
          method: 'DELETE',
          comment: 'Delete a field',
          urlPlaceholder: {
            variableName: 'fieldId',
            isEntityId: true,
            relType: 'FieldData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldDestroyJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/field/duplicate',
          name: 'duplicate',
          rawName: 'rawDuplicate',
          urlTemplate: '/fields/${fieldId}/duplicate',
          method: 'POST',
          comment: 'Duplicate a field',
          urlPlaceholder: {
            variableName: 'fieldId',
            isEntityId: true,
            relType: 'FieldData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldDuplicateJobSchema',
        },
      ],
      namespace: 'fields',
      resourceClassName: 'Field',
    },
    {
      jsonApiType: 'fieldset',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/fieldset/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/item-types/${itemTypeId}/fieldsets',
          method: 'POST',
          comment: 'Create a new fieldset',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          requestBodyType: 'FieldsetCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'fieldset',
            attributes: [
              'title',
              'hint',
              'position',
              'collapsible',
              'start_collapsed',
            ],
            relationships: [],
          },
          responseType: 'FieldsetCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/fieldset/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/fieldsets/${fieldsetId}',
          method: 'PUT',
          comment: 'Update a fieldset',
          urlPlaceholder: {
            variableName: 'fieldsetId',
            isEntityId: true,
            relType: 'FieldsetData',
          },
          requestBodyType: 'FieldsetUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'fieldset',
            attributes: [
              'title',
              'hint',
              'position',
              'collapsible',
              'start_collapsed',
            ],
            relationships: [],
          },
          responseType: 'FieldsetUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/fieldset/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/item-types/${itemTypeId}/fieldsets',
          method: 'GET',
          comment: 'List all fieldsets',
          urlPlaceholder: {
            variableName: 'itemTypeId',
            isEntityId: false,
            relType: 'ItemTypeData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldsetInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/fieldset/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/fieldsets/${fieldsetId}',
          method: 'GET',
          comment: 'Retrieve a fieldset',
          urlPlaceholder: {
            variableName: 'fieldsetId',
            isEntityId: true,
            relType: 'FieldsetData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldsetSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/fieldset/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/fieldsets/${fieldsetId}',
          method: 'DELETE',
          comment: 'Delete a fieldset',
          urlPlaceholder: {
            variableName: 'fieldsetId',
            isEntityId: true,
            relType: 'FieldsetData',
          },
          simpleMethodAvailable: true,
          responseType: 'FieldsetDestroyTargetSchema',
        },
      ],
      namespace: 'fieldsets',
      resourceClassName: 'Fieldset',
    },
    {
      jsonApiType: 'session',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/session/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/sessions',
          method: 'POST',
          comment: 'Create a new session',
          requestBodyType: 'SessionCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'email_credentials',
            attributes: ['email', 'password', 'otp_code'],
            relationships: [],
          },
          responseType: 'SessionCreateTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
      ],
      namespace: 'session',
      resourceClassName: 'Session',
    },
    {
      jsonApiType: 'access_token',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/access_tokens',
          method: 'POST',
          comment: 'Create a new API token',
          requestBodyType: 'AccessTokenCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'access_token',
            attributes: [
              'name',
              'can_access_cda',
              'can_access_cda_preview',
              'can_access_cma',
            ],
            relationships: ['role'],
          },
          responseType: 'AccessTokenCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/access_tokens/${accessTokenId}',
          method: 'PUT',
          comment: 'Update an API token',
          urlPlaceholder: {
            variableName: 'accessTokenId',
            isEntityId: true,
            relType: 'AccessTokenData',
          },
          requestBodyType: 'AccessTokenUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'access_token',
            attributes: [
              'name',
              'can_access_cda',
              'can_access_cda_preview',
              'can_access_cma',
            ],
            relationships: ['role'],
          },
          responseType: 'AccessTokenUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/access_tokens',
          method: 'GET',
          comment: 'List all API tokens',
          simpleMethodAvailable: true,
          responseType: 'AccessTokenInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/access_tokens/${accessTokenId}',
          method: 'GET',
          comment: 'Retrieve an API token',
          urlPlaceholder: {
            variableName: 'accessTokenId',
            isEntityId: true,
            relType: 'AccessTokenData',
          },
          simpleMethodAvailable: true,
          responseType: 'AccessTokenSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/regenerate_token',
          name: 'regenerateToken',
          rawName: 'rawRegenerateToken',
          urlTemplate: '/access_tokens/${accessTokenId}/regenerate_token',
          method: 'POST',
          comment: 'Rotate API token',
          urlPlaceholder: {
            variableName: 'accessTokenId',
            isEntityId: true,
            relType: 'AccessTokenData',
          },
          simpleMethodAvailable: true,
          responseType: 'AccessTokenRegenerateTokenTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/access-token/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/access_tokens/${accessTokenId}',
          method: 'DELETE',
          comment: 'Delete an API token',
          urlPlaceholder: {
            variableName: 'accessTokenId',
            isEntityId: true,
            relType: 'AccessTokenData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'AccessTokenDestroyHrefSchema',
          responseType: 'AccessTokenDestroyTargetSchema',
        },
      ],
      namespace: 'accessTokens',
      resourceClassName: 'AccessToken',
    },
    {
      jsonApiType: 'plugin',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/plugins',
          method: 'POST',
          comment: 'Create a new plugin',
          requestBodyType: 'PluginCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'plugin',
            attributes: [
              'package_name',
              'name',
              'description',
              'url',
              'permissions',
              'plugin_type',
              'field_types',
              'parameter_definitions',
              'package_version',
            ],
            relationships: [],
          },
          responseType: 'PluginCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/plugins/${pluginId}',
          method: 'PUT',
          comment: 'Update a plugin',
          urlPlaceholder: {
            variableName: 'pluginId',
            isEntityId: true,
            relType: 'PluginData',
          },
          requestBodyType: 'PluginUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'plugin',
            attributes: [
              'name',
              'description',
              'url',
              'parameters',
              'package_version',
              'permissions',
            ],
            relationships: [],
          },
          responseType: 'PluginUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/plugins',
          method: 'GET',
          comment: 'List all plugins',
          simpleMethodAvailable: true,
          responseType: 'PluginInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/plugins/${pluginId}',
          method: 'GET',
          comment: 'Retrieve a plugins',
          urlPlaceholder: {
            variableName: 'pluginId',
            isEntityId: true,
            relType: 'PluginData',
          },
          simpleMethodAvailable: true,
          responseType: 'PluginSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/plugins/${pluginId}',
          method: 'DELETE',
          comment: 'Delete a plugin',
          urlPlaceholder: {
            variableName: 'pluginId',
            isEntityId: true,
            relType: 'PluginData',
          },
          simpleMethodAvailable: true,
          responseType: 'PluginDestroyTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/plugin/fields',
          name: 'fields',
          rawName: 'rawFields',
          urlTemplate: '/plugins/${pluginId}/fields',
          method: 'GET',
          comment: 'Retrieve all fields using the plugin',
          urlPlaceholder: {
            variableName: 'pluginId',
            isEntityId: true,
            relType: 'PluginData',
          },
          simpleMethodAvailable: true,
          responseType: 'PluginFieldsTargetSchema',
        },
      ],
      namespace: 'plugins',
      resourceClassName: 'Plugin',
    },
    {
      jsonApiType: 'job_result',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/job-result/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/job-results/${jobResultId}',
          method: 'GET',
          comment: 'Retrieve a job result',
          urlPlaceholder: {
            variableName: 'jobResultId',
            isEntityId: true,
            relType: 'JobResultData',
          },
          simpleMethodAvailable: true,
          responseType: 'JobResultSelfTargetSchema',
        },
      ],
      namespace: 'jobResults',
      resourceClassName: 'JobResult',
    },
    {
      jsonApiType: 'subscription_limit',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/subscription-limit/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/subscription-limits',
          method: 'GET',
          comment: 'Get all the subscription limits',
          simpleMethodAvailable: true,
          responseType: 'SubscriptionLimitInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/subscription-limit/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/subscription-limits/${subscriptionLimitId}',
          method: 'GET',
          comment: 'Get a single subscription limit',
          urlPlaceholder: {
            variableName: 'subscriptionLimitId',
            isEntityId: true,
            relType: 'SubscriptionLimitData',
          },
          simpleMethodAvailable: true,
          responseType: 'SubscriptionLimitSelfTargetSchema',
        },
      ],
      namespace: 'subscriptionLimits',
      resourceClassName: 'SubscriptionLimit',
    },
    {
      jsonApiType: 'subscription_feature',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/subscription-feature/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/subscription-features',
          method: 'GET',
          comment: 'Get all the subscription features',
          simpleMethodAvailable: true,
          responseType: 'SubscriptionFeatureInstancesTargetSchema',
        },
      ],
      namespace: 'subscriptionFeatures',
      resourceClassName: 'SubscriptionFeature',
    },
    {
      jsonApiType: 'build_event',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-event/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/build-events',
          method: 'GET',
          comment: 'List all deploy events',
          simpleMethodAvailable: true,
          responseType: 'BuildEventInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-event/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/build-events/${buildEventId}',
          method: 'GET',
          comment: 'Retrieve a deploy event',
          urlPlaceholder: {
            variableName: 'buildEventId',
            isEntityId: true,
            relType: 'BuildEventData',
          },
          simpleMethodAvailable: true,
          responseType: 'BuildEventSelfTargetSchema',
        },
      ],
      namespace: 'buildEvents',
      resourceClassName: 'BuildEvent',
    },
    {
      jsonApiType: 'item',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/items',
          method: 'GET',
          comment: 'List all records',
          simpleMethodAvailable: true,
          queryParamsType: 'ItemInstancesHrefSchema',
          responseType: 'ItemInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 30,
            maxLimit: 500,
          },
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/validate_existing',
          name: 'validateExisting',
          rawName: 'rawValidateExisting',
          urlTemplate: '/items/${itemId}/validate',
          method: 'POST',
          comment: 'Validates an existing record field',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          requestBodyType: 'ItemValidateExistingSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item',
            attributes: '*',
            relationships: ['item_type', 'creator'],
          },
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/validate_new',
          name: 'validateNew',
          rawName: 'rawValidateNew',
          urlTemplate: '/items/validate',
          method: 'POST',
          comment: 'Validates a record field',
          requestBodyType: 'ItemValidateNewSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item',
            attributes: '*',
            relationships: ['item_type'],
          },
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/items',
          method: 'POST',
          comment: 'Create a new record',
          requestBodyType: 'ItemCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item',
            attributes: '*',
            relationships: ['item_type'],
          },
          responseType: 'ItemCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/duplicate',
          name: 'duplicate',
          rawName: 'rawDuplicate',
          urlTemplate: '/items/${itemId}/duplicate',
          method: 'POST',
          comment: 'Duplicate a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemDuplicateJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/items/${itemId}',
          method: 'PUT',
          comment: 'Update a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          requestBodyType: 'ItemUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item',
            attributes: '*',
            relationships: ['item_type', 'creator'],
          },
          responseType: 'ItemUpdateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/references',
          name: 'references',
          rawName: 'rawReferences',
          urlTemplate: '/items/${itemId}/references',
          method: 'GET',
          comment: 'Referenced records',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'ItemReferencesHrefSchema',
          responseType: 'ItemReferencesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/items/${itemId}',
          method: 'GET',
          comment: 'Retrieve a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'ItemSelfHrefSchema',
          responseType: 'ItemSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/items/${itemId}',
          method: 'DELETE',
          comment: 'Delete a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemDestroyJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/batch_destroy',
          name: 'batchDestroy',
          rawName: 'rawBatchDestroy',
          urlTemplate: '/items',
          method: 'DELETE',
          comment: 'Delete multiple records',
          simpleMethodAvailable: true,
          queryParamsType: 'ItemBatchDestroyHrefSchema',
          responseType: 'ItemBatchDestroyJobSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/batch_publish',
          name: 'batchPublish',
          rawName: 'rawBatchPublish',
          urlTemplate: '/items/publish',
          method: 'PUT',
          comment: 'Publish multiple records',
          simpleMethodAvailable: true,
          queryParamsType: 'ItemBatchPublishHrefSchema',
          responseType: 'ItemBatchPublishJobSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/batch_unpublish',
          name: 'batchUnpublish',
          rawName: 'rawBatchUnpublish',
          urlTemplate: '/items/unpublish',
          method: 'PUT',
          comment: 'Unpublish multiple records',
          simpleMethodAvailable: true,
          queryParamsType: 'ItemBatchUnpublishHrefSchema',
          responseType: 'ItemBatchUnpublishJobSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/publish',
          name: 'publish',
          rawName: 'rawPublish',
          urlTemplate: '/items/${itemId}/publish',
          method: 'PUT',
          comment: 'Publish a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'ItemPublishHrefSchema',
          responseType: 'ItemPublishTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/unpublish',
          name: 'unpublish',
          rawName: 'rawUnpublish',
          urlTemplate: '/items/${itemId}/unpublish',
          method: 'PUT',
          comment: 'Unpublish a record',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: true,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'ItemUnpublishHrefSchema',
          responseType: 'ItemUnpublishTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/bulk_publish',
          name: 'bulkPublish',
          rawName: 'rawBulkPublish',
          urlTemplate: '/items/bulk/publish',
          method: 'POST',
          comment: 'Publish items in bulk',
          requestBodyType: 'ItemBulkPublishSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_bulk_publish_operation',
            attributes: [],
            relationships: ['items'],
          },
          responseType: 'ItemBulkPublishJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/bulk_unpublish',
          name: 'bulkUnpublish',
          rawName: 'rawBulkUnpublish',
          urlTemplate: '/items/bulk/unpublish',
          method: 'POST',
          comment: 'Unpublish items in bulk',
          requestBodyType: 'ItemBulkUnpublishSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_bulk_unpublish_operation',
            attributes: [],
            relationships: ['items'],
          },
          responseType: 'ItemBulkUnpublishJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/bulk_destroy',
          name: 'bulkDestroy',
          rawName: 'rawBulkDestroy',
          urlTemplate: '/items/bulk/destroy',
          method: 'POST',
          comment: 'Destroy items in bulk',
          requestBodyType: 'ItemBulkDestroySchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_bulk_destroy_operation',
            attributes: [],
            relationships: ['items'],
          },
          responseType: 'ItemBulkDestroyJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item/bulk_move_to_stage',
          name: 'bulkMoveToStage',
          rawName: 'rawBulkMoveToStage',
          urlTemplate: '/items/bulk/move-to-stage',
          method: 'POST',
          comment: 'Move items to stage in bulk',
          requestBodyType: 'ItemBulkMoveToStageSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_bulk_move_to_stage_operation',
            attributes: ['stage'],
            relationships: ['items'],
          },
          responseType: 'ItemBulkMoveToStageJobSchema',
        },
      ],
      namespace: 'items',
      resourceClassName: 'Item',
    },
    {
      jsonApiType: 'item_version',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-version/restore',
          name: 'restore',
          rawName: 'rawRestore',
          urlTemplate: '/versions/${itemVersionId}/restore',
          method: 'POST',
          comment: 'Restore an old record version',
          urlPlaceholder: {
            variableName: 'itemVersionId',
            isEntityId: true,
            relType: 'ItemVersionData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemVersionRestoreJobSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-version/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/items/${itemId}/versions',
          method: 'GET',
          comment: 'List all record versions',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: false,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'ItemVersionInstancesHrefSchema',
          responseType: 'ItemVersionInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 15,
            maxLimit: 50,
          },
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-version/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/versions/${itemVersionId}',
          method: 'GET',
          comment: 'Retrieve a record version',
          urlPlaceholder: {
            variableName: 'itemVersionId',
            isEntityId: true,
            relType: 'ItemVersionData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemVersionSelfTargetSchema',
        },
      ],
      namespace: 'itemVersions',
      resourceClassName: 'ItemVersion',
    },
    {
      jsonApiType: 'upload',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/uploads',
          method: 'POST',
          comment: 'Create a new upload',
          requestBodyType: 'UploadCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload',
            attributes: [
              'path',
              'copyright',
              'author',
              'notes',
              'default_field_metadata',
              'tags',
            ],
            relationships: [],
          },
          responseType: 'UploadCreateJobSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/uploads',
          method: 'GET',
          comment: 'List all uploads',
          simpleMethodAvailable: true,
          queryParamsType: 'UploadInstancesHrefSchema',
          responseType: 'UploadInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 30,
            maxLimit: 500,
          },
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/uploads/${uploadId}',
          method: 'GET',
          comment: 'Retrieve an upload',
          urlPlaceholder: {
            variableName: 'uploadId',
            isEntityId: true,
            relType: 'UploadData',
          },
          simpleMethodAvailable: true,
          responseType: 'UploadSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/uploads/${uploadId}',
          method: 'DELETE',
          comment: 'Delete an upload',
          urlPlaceholder: {
            variableName: 'uploadId',
            isEntityId: true,
            relType: 'UploadData',
          },
          simpleMethodAvailable: true,
          responseType: 'UploadDestroyTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/uploads/${uploadId}',
          method: 'PUT',
          comment: 'Update an upload',
          urlPlaceholder: {
            variableName: 'uploadId',
            isEntityId: true,
            relType: 'UploadData',
          },
          requestBodyType: 'UploadUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload',
            attributes: [
              'path',
              'basename',
              'copyright',
              'author',
              'notes',
              'tags',
              'default_field_metadata',
            ],
            relationships: ['creator'],
          },
          responseType: 'UploadUpdateJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/batch_add_tags',
          name: 'batchAddTags',
          rawName: 'rawBatchAddTags',
          urlTemplate: '/uploads/batch-add-tags',
          method: 'PUT',
          comment: 'Batch add tags to uploads',
          requestBodyType: 'UploadBatchAddTagsSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload',
            attributes: ['tags'],
            relationships: [],
          },
          queryParamsType: 'UploadBatchAddTagsHrefSchema',
          responseType: 'UploadBatchAddTagsJobSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/batch_destroy',
          name: 'batchDestroy',
          rawName: 'rawBatchDestroy',
          urlTemplate: '/uploads/batch-destroy',
          method: 'DELETE',
          comment: 'Delete multiple uploads',
          simpleMethodAvailable: true,
          queryParamsType: 'UploadBatchDestroyHrefSchema',
          responseType: 'UploadBatchDestroyJobSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/references',
          name: 'references',
          rawName: 'rawReferences',
          urlTemplate: '/uploads/${uploadId}/references',
          method: 'GET',
          comment: 'Referenced records',
          urlPlaceholder: {
            variableName: 'uploadId',
            isEntityId: true,
            relType: 'UploadData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'UploadReferencesHrefSchema',
          responseType: 'UploadReferencesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/bulk_tag',
          name: 'bulkTag',
          rawName: 'rawBulkTag',
          urlTemplate: '/uploads/bulk/tag',
          method: 'POST',
          comment: 'Add tags to assets in bulk',
          requestBodyType: 'UploadBulkTagSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_bulk_tag_operation',
            attributes: ['tags'],
            relationships: ['uploads'],
          },
          responseType: 'UploadBulkTagJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload/bulk_destroy',
          name: 'bulkDestroy',
          rawName: 'rawBulkDestroy',
          urlTemplate: '/uploads/bulk/destroy',
          method: 'POST',
          comment: 'Destroy uploads',
          requestBodyType: 'UploadBulkDestroySchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_bulk_destroy_operation',
            attributes: [],
            relationships: ['uploads'],
          },
          responseType: 'UploadBulkDestroyJobSchema',
        },
      ],
      namespace: 'uploads',
      resourceClassName: 'Upload',
    },
    {
      jsonApiType: 'upload_request',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-request/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/upload-requests',
          method: 'POST',
          comment: 'Request a new upload',
          requestBodyType: 'UploadRequestCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_request',
            attributes: ['filename'],
            relationships: [],
          },
          responseType: 'UploadRequestCreateTargetSchema',
        },
      ],
      namespace: 'uploadRequest',
      resourceClassName: 'UploadRequest',
    },
    {
      jsonApiType: 'scheduled_publication',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/scheduled-publication/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/items/${itemId}/scheduled-publication',
          method: 'POST',
          comment: 'Create a new scheduled publication',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: false,
            relType: 'ItemData',
          },
          requestBodyType: 'ScheduledPublicationCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'scheduled_publication',
            attributes: ['publication_scheduled_at'],
            relationships: [],
          },
          responseType: 'ScheduledPublicationCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/scheduled-publication/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/items/${itemId}/scheduled-publication',
          method: 'DELETE',
          comment: 'Delete a scheduled publication',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: false,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'ScheduledPublicationDestroyTargetSchema',
        },
      ],
      namespace: 'scheduledPublication',
      resourceClassName: 'ScheduledPublication',
    },
    {
      jsonApiType: 'scheduled_unpublishing',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/scheduled-unpublishing/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/items/${itemId}/scheduled-unpublishing',
          method: 'POST',
          comment: 'Create a new scheduled unpublishing',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: false,
            relType: 'ItemData',
          },
          requestBodyType: 'ScheduledUnpublishingCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'scheduled_unpublishing',
            attributes: ['unpublishing_scheduled_at'],
            relationships: [],
          },
          responseType: 'ScheduledUnpublishingCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/scheduled-unpublishing/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/items/${itemId}/scheduled-unpublishing',
          method: 'DELETE',
          comment: 'Delete a scheduled unpublishing',
          urlPlaceholder: {
            variableName: 'itemId',
            isEntityId: false,
            relType: 'ItemData',
          },
          simpleMethodAvailable: true,
          responseType: 'ScheduledUnpublishingDestroyTargetSchema',
        },
      ],
      namespace: 'scheduledUnpublishing',
      resourceClassName: 'ScheduledUnpublishing',
    },
    {
      jsonApiType: 'search_result',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/search-result/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/search-results',
          method: 'GET',
          comment: 'Search for results',
          simpleMethodAvailable: true,
          queryParamsType: 'SearchResultInstancesHrefSchema',
          responseType: 'SearchResultInstancesTargetSchema',
        },
      ],
      namespace: 'searchResults',
      resourceClassName: 'SearchResult',
    },
    {
      jsonApiType: 'environment',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/environment/fork',
          name: 'fork',
          rawName: 'rawFork',
          urlTemplate: '/environments/${environmentId}/fork',
          method: 'POST',
          comment: 'Fork an existing environment',
          urlPlaceholder: {
            variableName: 'environmentId',
            isEntityId: true,
            relType: 'EnvironmentData',
          },
          requestBodyType: 'EnvironmentForkSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'environment',
            attributes: [],
            relationships: [],
          },
          responseType: 'EnvironmentForkJobSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/environment/promote',
          name: 'promote',
          rawName: 'rawPromote',
          urlTemplate: '/environments/${environmentId}/promote',
          method: 'PUT',
          comment: 'Promote an environment to primary',
          urlPlaceholder: {
            variableName: 'environmentId',
            isEntityId: true,
            relType: 'EnvironmentData',
          },
          simpleMethodAvailable: true,
          responseType: 'EnvironmentPromoteTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/environment/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/environments',
          method: 'GET',
          comment: 'List all environments',
          simpleMethodAvailable: true,
          responseType: 'EnvironmentInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/environment/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/environments/${environmentId}',
          method: 'GET',
          comment: 'Retrieve a environment',
          urlPlaceholder: {
            variableName: 'environmentId',
            isEntityId: true,
            relType: 'EnvironmentData',
          },
          simpleMethodAvailable: true,
          responseType: 'EnvironmentSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/environment/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/environments/${environmentId}',
          method: 'DELETE',
          comment: 'Delete a environment',
          urlPlaceholder: {
            variableName: 'environmentId',
            isEntityId: true,
            relType: 'EnvironmentData',
          },
          simpleMethodAvailable: true,
          responseType: 'EnvironmentDestroyJobSchema',
        },
      ],
      namespace: 'environments',
      resourceClassName: 'Environment',
    },
    {
      jsonApiType: 'maintenance_mode',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/maintenance-mode/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/maintenance-mode',
          method: 'GET',
          comment: 'Retrieve maintenence mode',
          simpleMethodAvailable: true,
          responseType: 'MaintenanceModeSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/maintenance-mode/activate',
          name: 'activate',
          rawName: 'rawActivate',
          urlTemplate: '/maintenance-mode/activate',
          method: 'PUT',
          comment:
            'Activate maintenance mode: this means that the primary environment will be read-only',
          simpleMethodAvailable: true,
          queryParamsType: 'MaintenanceModeActivateHrefSchema',
          responseType: 'MaintenanceModeActivateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/maintenance-mode/deactivate',
          name: 'deactivate',
          rawName: 'rawDeactivate',
          urlTemplate: '/maintenance-mode/deactivate',
          method: 'PUT',
          comment: 'De-activate maintenance mode',
          simpleMethodAvailable: true,
          responseType: 'MaintenanceModeDeactivateTargetSchema',
        },
      ],
      namespace: 'maintenanceMode',
      resourceClassName: 'MaintenanceMode',
    },
    {
      jsonApiType: 'webhook',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/webhooks',
          method: 'POST',
          comment: 'Create a new webhook',
          requestBodyType: 'WebhookCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'webhook',
            attributes: [
              'name',
              'url',
              'custom_payload',
              'headers',
              'events',
              'http_basic_user',
              'http_basic_password',
              'enabled',
              'payload_api_version',
              'nested_items_in_payload',
            ],
            relationships: [],
          },
          responseType: 'WebhookCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/webhooks/${userId}',
          method: 'PUT',
          comment: 'Update a webhook',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          requestBodyType: 'WebhookUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'webhook',
            attributes: [
              'name',
              'url',
              'custom_payload',
              'headers',
              'events',
              'http_basic_user',
              'http_basic_password',
              'enabled',
              'payload_api_version',
              'nested_items_in_payload',
            ],
            relationships: [],
          },
          responseType: 'WebhookUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/webhooks',
          method: 'GET',
          comment: 'List all webhooks',
          simpleMethodAvailable: true,
          responseType: 'WebhookInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/webhooks/${userId}',
          method: 'GET',
          comment: 'Retrieve a webhook',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          responseType: 'WebhookSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/webhooks/${userId}',
          method: 'DELETE',
          comment: 'Delete a webhook',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
          responseType: 'WebhookDestroyTargetSchema',
        },
      ],
      namespace: 'webhooks',
      resourceClassName: 'Webhook',
    },
    {
      jsonApiType: 'webhook_call',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook-call/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/webhook_calls',
          method: 'GET',
          comment: 'List all webhooks calls',
          simpleMethodAvailable: true,
          queryParamsType: 'WebhookCallInstancesHrefSchema',
          responseType: 'WebhookCallInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 30,
            maxLimit: 500,
          },
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/webhook-call/resend_webhook',
          name: 'resendWebhook',
          rawName: 'rawResendWebhook',
          urlTemplate: '/webhook_calls/${userId}/resend_webhook',
          method: 'POST',
          comment: 'Re-send the webhook call',
          urlPlaceholder: {
            variableName: 'userId',
            isEntityId: false,
            relType: 'UserData',
          },
          simpleMethodAvailable: true,
        },
      ],
      namespace: 'webhookCalls',
      resourceClassName: 'WebhookCall',
    },
    {
      jsonApiType: 'build_trigger',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/build-triggers',
          method: 'GET',
          comment: 'List all build triggers for a site',
          simpleMethodAvailable: true,
          responseType: 'BuildTriggerInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/build-triggers/${buildTriggerId}',
          method: 'GET',
          comment: 'Retrieve a build trigger',
          urlPlaceholder: {
            variableName: 'buildTriggerId',
            isEntityId: true,
            relType: 'BuildTriggerData',
          },
          simpleMethodAvailable: true,
          responseType: 'BuildTriggerSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/build-triggers',
          method: 'POST',
          comment: 'Create build trigger',
          requestBodyType: 'BuildTriggerCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'build_trigger',
            attributes: [
              'name',
              'webhook_token',
              'adapter',
              'indexing_enabled',
              'frontend_url',
              'autotrigger_on_scheduled_publications',
              'adapter_settings',
            ],
            relationships: [],
          },
          responseType: 'BuildTriggerCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/build-triggers/${buildTriggerId}',
          method: 'PUT',
          comment: 'Update build trigger',
          urlPlaceholder: {
            variableName: 'buildTriggerId',
            isEntityId: true,
            relType: 'BuildTriggerData',
          },
          requestBodyType: 'BuildTriggerUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'build_trigger',
            attributes: [
              'name',
              'adapter',
              'indexing_enabled',
              'frontend_url',
              'autotrigger_on_scheduled_publications',
              'adapter_settings',
            ],
            relationships: [],
          },
          responseType: 'BuildTriggerUpdateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/trigger',
          name: 'trigger',
          rawName: 'rawTrigger',
          urlTemplate: '/build-triggers/${buildTriggerId}/trigger',
          method: 'POST',
          comment: 'Trigger a deploy',
          urlPlaceholder: {
            variableName: 'buildTriggerId',
            isEntityId: true,
            relType: 'BuildTriggerData',
          },
          simpleMethodAvailable: true,
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/reindex',
          name: 'reindex',
          rawName: 'rawReindex',
          urlTemplate: '/build-triggers/${buildTriggerId}/reindex',
          method: 'PUT',
          comment: 'Trigger a new Site Search spidering of the website',
          urlPlaceholder: {
            variableName: 'buildTriggerId',
            isEntityId: true,
            relType: 'BuildTriggerData',
          },
          simpleMethodAvailable: true,
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/build-trigger/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/build-triggers/${buildTriggerId}',
          method: 'DELETE',
          comment: 'Delete a build trigger',
          urlPlaceholder: {
            variableName: 'buildTriggerId',
            isEntityId: true,
            relType: 'BuildTriggerData',
          },
          simpleMethodAvailable: true,
          responseType: 'BuildTriggerDestroyTargetSchema',
        },
      ],
      namespace: 'buildTriggers',
      resourceClassName: 'BuildTrigger',
    },
    {
      jsonApiType: 'item_type_filter',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type_filter/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/item-type-filters',
          method: 'POST',
          comment: 'Create a new filter',
          requestBodyType: 'ItemTypeFilterCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_type_filter',
            attributes: ['name', 'filter', 'shared'],
            relationships: ['item_type'],
          },
          responseType: 'ItemTypeFilterCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type_filter/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/item-type-filters/${itemTypeFilterId}',
          method: 'PUT',
          comment: 'Update a filter',
          urlPlaceholder: {
            variableName: 'itemTypeFilterId',
            isEntityId: true,
            relType: 'ItemTypeFilterData',
          },
          requestBodyType: 'ItemTypeFilterUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'item_type_filter',
            attributes: ['name', 'shared', 'filter'],
            relationships: [],
          },
          responseType: 'ItemTypeFilterUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type_filter/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/item-type-filters',
          method: 'GET',
          comment: 'List all filters',
          simpleMethodAvailable: true,
          responseType: 'ItemTypeFilterInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type_filter/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/item-type-filters/${itemTypeFilterId}',
          method: 'GET',
          comment: 'Retrieve a filter',
          urlPlaceholder: {
            variableName: 'itemTypeFilterId',
            isEntityId: true,
            relType: 'ItemTypeFilterData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemTypeFilterSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/item-type_filter/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/item-type-filters/${itemTypeFilterId}',
          method: 'DELETE',
          comment: 'Delete a filter',
          urlPlaceholder: {
            variableName: 'itemTypeFilterId',
            isEntityId: true,
            relType: 'ItemTypeFilterData',
          },
          simpleMethodAvailable: true,
          responseType: 'ItemTypeFilterDestroyTargetSchema',
        },
      ],
      namespace: 'itemTypeFilters',
      resourceClassName: 'ItemTypeFilter',
    },
    {
      jsonApiType: 'upload_filter',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-filter/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/upload-filters',
          method: 'POST',
          comment: 'Create a new filter',
          requestBodyType: 'UploadFilterCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_filter',
            attributes: ['name', 'filter', 'shared'],
            relationships: [],
          },
          responseType: 'UploadFilterCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-filter/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/upload-filters/${uploadFilterId}',
          method: 'PUT',
          comment: 'Update a filter',
          urlPlaceholder: {
            variableName: 'uploadFilterId',
            isEntityId: true,
            relType: 'UploadFilterData',
          },
          requestBodyType: 'UploadFilterUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_filter',
            attributes: ['name', 'shared', 'filter'],
            relationships: [],
          },
          responseType: 'UploadFilterUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-filter/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/upload-filters',
          method: 'GET',
          comment: 'List all filters',
          simpleMethodAvailable: true,
          responseType: 'UploadFilterInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-filter/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/upload-filters/${uploadFilterId}',
          method: 'GET',
          comment: 'Retrieve a filter',
          urlPlaceholder: {
            variableName: 'uploadFilterId',
            isEntityId: true,
            relType: 'UploadFilterData',
          },
          simpleMethodAvailable: true,
          responseType: 'UploadFilterSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-filter/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/upload-filters/${uploadFilterId}',
          method: 'DELETE',
          comment: 'Delete a filter',
          urlPlaceholder: {
            variableName: 'uploadFilterId',
            isEntityId: true,
            relType: 'UploadFilterData',
          },
          simpleMethodAvailable: true,
          responseType: 'UploadFilterDestroyTargetSchema',
        },
      ],
      namespace: 'uploadFilters',
      resourceClassName: 'UploadFilter',
    },
    {
      jsonApiType: 'site_invitation',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/site-invitations',
          method: 'POST',
          comment: 'Invite a new user',
          requestBodyType: 'SiteInvitationCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'site_invitation',
            attributes: ['email'],
            relationships: ['role'],
          },
          responseType: 'SiteInvitationCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/site-invitations/${siteInvitationId}',
          method: 'PUT',
          comment: 'Update an invitation',
          urlPlaceholder: {
            variableName: 'siteInvitationId',
            isEntityId: true,
            relType: 'SiteInvitationData',
          },
          requestBodyType: 'SiteInvitationUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'site_invitation',
            attributes: [],
            relationships: ['role'],
          },
          responseType: 'SiteInvitationUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/site-invitations',
          method: 'GET',
          comment: 'List all invitations',
          simpleMethodAvailable: true,
          responseType: 'SiteInvitationInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/site-invitations/${siteInvitationId}',
          method: 'GET',
          comment: 'Retrieve an invitation',
          urlPlaceholder: {
            variableName: 'siteInvitationId',
            isEntityId: true,
            relType: 'SiteInvitationData',
          },
          simpleMethodAvailable: true,
          responseType: 'SiteInvitationSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/site-invitations/${siteInvitationId}',
          method: 'DELETE',
          comment: 'Delete an invitation',
          urlPlaceholder: {
            variableName: 'siteInvitationId',
            isEntityId: true,
            relType: 'SiteInvitationData',
          },
          simpleMethodAvailable: true,
          responseType: 'SiteInvitationDestroyTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site-invitation/resend',
          name: 'resend',
          rawName: 'rawResend',
          urlTemplate: '/site-invitations/${siteInvitationId}/resend',
          method: 'POST',
          comment: 'Resend an invitation',
          urlPlaceholder: {
            variableName: 'siteInvitationId',
            isEntityId: true,
            relType: 'SiteInvitationData',
          },
          simpleMethodAvailable: true,
        },
      ],
      namespace: 'siteInvitations',
      resourceClassName: 'SiteInvitation',
    },
    {
      jsonApiType: 'editing_session',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/editing-session/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/editing-sessions',
          method: 'GET',
          comment: 'List all editing sessions',
          simpleMethodAvailable: true,
          responseType: 'EditingSessionInstancesTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/editing-session/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/editing-sessions/${editingSessionId}',
          method: 'PUT',
          comment: 'Allows all actions on editing sessions',
          urlPlaceholder: {
            variableName: 'editingSessionId',
            isEntityId: true,
            relType: 'EditingSessionData',
          },
          requestBodyType: 'EditingSessionUpdateSchema',
          simpleMethodAvailable: false,
          requestStructure: {
            type: '*',
            attributes: [],
            relationships: ['item', 'item', 'item'],
          },
          responseType: 'EditingSessionUpdateTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/editing-session/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/editing-sessions/${editingSessionId}',
          method: 'DELETE',
          comment: 'Delete an editing session',
          urlPlaceholder: {
            variableName: 'editingSessionId',
            isEntityId: true,
            relType: 'EditingSessionData',
          },
          simpleMethodAvailable: true,
          responseType: 'EditingSessionDestroyTargetSchema',
          deprecated:
            'This API call is to be considered private and might change without notice',
        },
      ],
      namespace: 'editingSessions',
      resourceClassName: 'EditingSession',
    },
    {
      jsonApiType: 'sso_group',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-group/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/sso-groups',
          method: 'GET',
          comment: 'List all SSO groups',
          simpleMethodAvailable: true,
          responseType: 'SsoGroupInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-group/copy_roles',
          name: 'copyRoles',
          rawName: 'rawCopyRoles',
          urlTemplate: '/sso-groups/${ssoGroupId}/copy-roles',
          method: 'POST',
          comment: 'Sync SSO provider groups to DatoCMS roles',
          urlPlaceholder: {
            variableName: 'ssoGroupId',
            isEntityId: true,
            relType: 'SsoGroupData',
          },
          simpleMethodAvailable: true,
          responseType: 'SsoGroupCopyRolesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-group/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/sso-groups/${ssoGroupId}',
          method: 'PUT',
          comment: 'Update a SSO group',
          urlPlaceholder: {
            variableName: 'ssoGroupId',
            isEntityId: true,
            relType: 'SsoGroupData',
          },
          requestBodyType: 'SsoGroupUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'sso_group',
            attributes: ['priority'],
            relationships: ['role'],
          },
          responseType: 'SsoGroupUpdateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-group/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/sso-groups/${ssoGroupId}',
          method: 'DELETE',
          comment: 'Delete a group',
          urlPlaceholder: {
            variableName: 'ssoGroupId',
            isEntityId: true,
            relType: 'SsoGroupData',
          },
          simpleMethodAvailable: true,
          responseType: 'SsoGroupDestroyTargetSchema',
        },
      ],
      namespace: 'ssoGroups',
      resourceClassName: 'SsoGroup',
    },
    {
      jsonApiType: 'sso_settings',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-settings/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/sso-settings',
          method: 'GET',
          comment: 'Retrieve SSO Settings',
          simpleMethodAvailable: true,
          responseType: 'SsoSettingsSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-settings/generate_token',
          name: 'generateToken',
          rawName: 'rawGenerateToken',
          urlTemplate: '/sso-settings/generate-token',
          method: 'PUT',
          comment: 'Generate SSO token',
          simpleMethodAvailable: true,
          responseType: 'SsoSettingsGenerateTokenTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/sso-settings/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/sso-settings',
          method: 'PUT',
          comment: 'Update SSO Settings',
          requestBodyType: 'SsoSettingsUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'sso_settings',
            attributes: ['idp_saml_metadata_url'],
            relationships: ['default_role'],
          },
          responseType: 'SsoSettingsUpdateTargetSchema',
        },
      ],
      namespace: 'ssoSettings',
      resourceClassName: 'SsoSettings',
    },
    {
      jsonApiType: 'white_label_settings',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/white-label_settings/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/white-label-settings',
          method: 'GET',
          comment: 'Retrieve white-label settings',
          simpleMethodAvailable: true,
          responseType: 'WhiteLabelSettingsSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/white-label_settings/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/white-label-settings',
          method: 'PUT',
          comment: 'Update white-label settings',
          requestBodyType: 'WhiteLabelSettingsUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'white_label_settings',
            attributes: ['custom_i18n_messages_template_url'],
            relationships: [],
          },
          responseType: 'WhiteLabelSettingsUpdateTargetSchema',
        },
      ],
      namespace: 'whiteLabelSettings',
      resourceClassName: 'WhiteLabelSettings',
    },
    {
      jsonApiType: 'public_info',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/public-info/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/public-info',
          method: 'GET',
          comment: 'Retrieve public site info',
          simpleMethodAvailable: true,
          responseType: 'PublicInfoSelfTargetSchema',
        },
      ],
      namespace: 'publicInfo',
      resourceClassName: 'PublicInfo',
    },
    {
      jsonApiType: 'daily_usage',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/daily-usage/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/daily-site-usages',
          method: 'GET',
          comment: "Retrieve project's daily usage info",
          simpleMethodAvailable: true,
          responseType: 'DailyUsageInstancesTargetSchema',
        },
      ],
      namespace: 'dailyUsages',
      resourceClassName: 'DailyUsage',
    },
    {
      jsonApiType: 'usage_counter',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/usage-counter/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/usage-log-counters/${usageCounterId}',
          method: 'GET',
          comment: "Retrieve a project's usage counter",
          urlPlaceholder: {
            variableName: 'usageCounterId',
            isEntityId: true,
            relType: 'UsageCounterData',
          },
          simpleMethodAvailable: true,
          queryParamsType: 'UsageCounterSelfHrefSchema',
          responseType: 'UsageCounterSelfTargetSchema',
        },
      ],
      namespace: 'usageCounters',
      resourceClassName: 'UsageCounter',
    },
    {
      jsonApiType: 'upload_tag',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-tag/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/upload-tags',
          method: 'GET',
          comment: 'List all manually created upload tags',
          simpleMethodAvailable: true,
          queryParamsType: 'UploadTagInstancesHrefSchema',
          responseType: 'UploadTagInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 50,
            maxLimit: 500,
          },
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-tag/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/upload-tags',
          method: 'POST',
          comment: 'Create a new upload tag',
          requestBodyType: 'UploadTagCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'upload_tag',
            attributes: ['name'],
            relationships: [],
          },
          responseType: 'UploadTagCreateTargetSchema',
        },
      ],
      namespace: 'uploadTags',
      resourceClassName: 'UploadTag',
    },
    {
      jsonApiType: 'upload_smart_tag',
      endpoints: [
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/upload-smart_tag/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/upload-smart-tags',
          method: 'GET',
          comment: 'List all automatically created upload tags',
          simpleMethodAvailable: true,
          queryParamsType: 'UploadSmartTagInstancesHrefSchema',
          responseType: 'UploadSmartTagInstancesTargetSchema',
          paginatedResponse: {
            defaultLimit: 50,
            maxLimit: 500,
          },
        },
      ],
      namespace: 'uploadSmartTags',
      resourceClassName: 'UploadSmartTag',
    },
    {
      jsonApiType: 'site',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/site',
          method: 'GET',
          comment: 'Retrieve the site',
          simpleMethodAvailable: true,
          responseType: 'SiteSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/site/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/site',
          method: 'PUT',
          comment: "Update the site's settings",
          requestBodyType: 'SiteUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'site',
            attributes: [
              'no_index',
              'favicon',
              'global_seo',
              'name',
              'theme',
              'locales',
              'timezone',
              'require_2fa',
              'ip_tracking_enabled',
            ],
            relationships: ['sso_default_role'],
          },
          responseType: 'SiteUpdateJobSchema',
        },
      ],
      namespace: 'site',
      resourceClassName: 'Site',
    },
    {
      jsonApiType: 'workflow',
      endpoints: [
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/workflow/create',
          name: 'create',
          rawName: 'rawCreate',
          urlTemplate: '/workflows',
          method: 'POST',
          comment: 'Create a new workflow',
          requestBodyType: 'WorkflowCreateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'workflow',
            attributes: ['name', 'stages'],
            relationships: [],
          },
          responseType: 'WorkflowCreateTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/workflow/update',
          name: 'update',
          rawName: 'rawUpdate',
          urlTemplate: '/workflows/${workflowId}',
          method: 'PUT',
          comment: 'Update a workflow',
          urlPlaceholder: {
            variableName: 'workflowId',
            isEntityId: true,
            relType: 'WorkflowData',
          },
          requestBodyType: 'WorkflowUpdateSchema',
          simpleMethodAvailable: true,
          requestStructure: {
            type: 'workflow',
            attributes: ['name', 'stages'],
            relationships: [],
          },
          responseType: 'WorkflowUpdateTargetSchema',
        },
        {
          returnsCollection: true,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/workflow/instances',
          name: 'list',
          rawName: 'rawList',
          urlTemplate: '/workflows',
          method: 'GET',
          comment: 'List all workflows',
          simpleMethodAvailable: true,
          responseType: 'WorkflowInstancesTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/workflow/self',
          name: 'find',
          rawName: 'rawFind',
          urlTemplate: '/workflows/${workflowId}',
          method: 'GET',
          comment: 'Retrieve a workflow',
          urlPlaceholder: {
            variableName: 'workflowId',
            isEntityId: true,
            relType: 'WorkflowData',
          },
          simpleMethodAvailable: true,
          responseType: 'WorkflowSelfTargetSchema',
        },
        {
          returnsCollection: false,
          docUrl:
            'https://www.datocms.com/docs/content-management-api/resources/workflow/destroy',
          name: 'destroy',
          rawName: 'rawDestroy',
          urlTemplate: '/workflows/${workflowId}',
          method: 'DELETE',
          comment: 'Delete a workflow',
          urlPlaceholder: {
            variableName: 'workflowId',
            isEntityId: true,
            relType: 'WorkflowData',
          },
          simpleMethodAvailable: true,
        },
      ],
      namespace: 'workflows',
      resourceClassName: 'Workflow',
    },
  ],
};
